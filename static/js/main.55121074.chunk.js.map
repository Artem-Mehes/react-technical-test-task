{"version":3,"sources":["components/Employees/style.js","components/EmployeesItem/style.js","constants/ActionTypes.js","actions/checkEmployee.js","actions/uncheckEmployee.js","components/EmployeesItem/index.js","components/EmployeesList/style.js","services/date.js","components/EmployeesList/index.js","components/Employees/index.js","components/Birthdays/style.js","components/BirthdaysList/style.js","components/BirthdaysItem/style.js","components/BirthdaysItem/index.js","components/BirthdaysList/index.js","components/Birthdays/index.js","actions/setEmployees.js","services/alphabetSort.js","components/App/style.js","services/getEmployees.js","components/App/index.js","reducers/setEmployeesReducer.js","reducers/selectEmployeeReducer.js","reducers/index.js","store.js","services/storage.js","styles/theme.js","styles/globalStyle.js","index.js"],"names":["Main","styled","main","theme","colors","mainBg","Heading","h1","StyledEmployeesItem","li","Checkbox","input","SET_EMPLOYEES","CHECK_EMPLOYEE","UNCHECK_EMPLOYEE","checkEmployee","employee","month","type","payload","uncheckEmployee","EmployeesItem","dispatch","useDispatch","isChecked","useSelector","storeMonth","selected","undefined","find","id","lastName","firstName","onChange","target","checked","memo","StyledEmployeesList","ul","EmployeesColumn","Letter","h3","accentColor","formatDate","date","formattedDate","Date","toLocaleDateString","day","year","EmployeesList","employees","Object","keys","map","letter","length","dob","uuidv4","Employees","BirthdaysAside","aside","h2","BirthdaysInner","div","Month","h4","BirthdaysItems","StyledBirthdaysList","NoEmployees","span","Item","BirthdaysItem","BirthdaysList","selectedEmployees","state","birthdayMonths","Birthdays","setEmployees","alphabetSort","alphabetObject","Array","reduce","obj","_","i","String","fromCharCode","forEach","push","preloaderAnimation","keyframes","Preloader","ErrHeading","getEmployees","source","a","axios","get","cancelToken","token","response","console","error","Error","App","useState","isLoading","setIsLoading","setError","useEffect","CancelToken","then","data","sortedEmployees","catch","err","message","cancel","setEmployeesReducer","selectEmployeeReducer","stateMonth","filtered","filter","withoutEmptyMonth","rootReducer","combineReducers","store","createStore","key","persistedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","textColor","font","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55121074.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Main = styled.main`\r\n    flex: 1;\r\n    background-color: ${({ theme }) => theme.colors.mainBg};\r\n`;\r\n\r\nexport const Heading = styled.h1`\r\n    margin-left: 6rem;\r\n    margin-top: 2rem;\r\n`;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledEmployeesItem = styled.li`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 0.4rem;\r\n`;\r\n\r\nexport const Checkbox = styled.input`\r\n    margin-left: 0.5rem;\r\n`;","export const SET_EMPLOYEES = 'SET_EMPLOYEES';\r\nexport const CHECK_EMPLOYEE = 'CHECK_EMPLOYEE';\r\nexport const UNCHECK_EMPLOYEE = 'UNCHECK_EMPLOYEE';\r\n","import { CHECK_EMPLOYEE } from 'constants/ActionTypes';\r\n\r\nconst checkEmployee = (employee, month) => {\r\n    return {\r\n\t\ttype: CHECK_EMPLOYEE,\r\n\t\tpayload: { employee, month },\r\n\t};\r\n}\r\n\r\nexport default checkEmployee;","import { UNCHECK_EMPLOYEE } from 'constants/ActionTypes';\r\n\r\nconst uncheckEmployee = (employee, month) => {\r\n\treturn {\r\n\t\ttype: UNCHECK_EMPLOYEE,\r\n\t\tpayload: { employee, month },\r\n\t};\r\n};\r\n\r\nexport default uncheckEmployee;\r\n","import React from 'react';\r\nimport { StyledEmployeesItem, Checkbox } from './style';\r\nimport { useDispatch } from 'react-redux';\r\nimport checkEmployee from 'actions/checkEmployee';\r\nimport uncheckEmployee from 'actions/uncheckEmployee';\r\nimport { useSelector } from 'react-redux';\r\nimport { memo } from 'react';\r\nimport { shape, string } from 'prop-types';\r\n\r\nconst EmployeesItem = ({ employee, month }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isChecked = useSelector(({ selected }) => {\r\n\t\tconst storeMonth = selected[month];\r\n\r\n\t\treturn (\r\n\t\t\t(storeMonth && storeMonth.find(({ id }) => id === employee.id)) !==\r\n\t\t\tundefined\r\n\t\t);\r\n\t});\r\n\r\n\tconst handleCheck = ({ target }) => {\r\n\t\ttarget.checked\r\n\t\t\t? dispatch(checkEmployee(employee, month))\r\n\t\t\t: dispatch(uncheckEmployee(employee, month));\r\n\t};\r\n\r\n\tconst { lastName, firstName } = employee;\r\n\r\n\treturn (\r\n\t\t<StyledEmployeesItem>\r\n\t\t\t{`${lastName} ${firstName}`}\r\n\r\n\t\t\t<Checkbox\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tonChange={handleCheck}\r\n\t\t\t\tchecked={isChecked}\r\n\t\t\t/>\r\n\t\t</StyledEmployeesItem>\r\n\t);\r\n};\r\n\r\nEmployeesItem.propTypes = {\r\n\temployee: shape({\r\n\t\tid: string,\r\n\t\tlastName: string,\r\n\t\tfirstName: string,\r\n\t\tdob: string,\r\n\t}),\r\n\tmonth: string,\r\n};\r\n\r\nexport default memo(EmployeesItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledEmployeesList = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding-left: 1rem;\r\n`;\r\n\r\nexport const EmployeesColumn = styled.li`\r\n    width: 20%;\r\n    background-color: #fff;\r\n    border-radius: 17px;\r\n    padding: 1rem 1.5rem;\r\n    min-width: 196px;\r\n    margin: 0 1.3rem 2rem;\r\n`;\r\n\r\nexport const Letter = styled.h3`\r\n    margin-bottom: 1rem;\r\n    font-size: 2rem;\r\n    color: ${({ theme }) => theme.colors.accentColor};\r\n`;","export const formatMonth = (date) => {\r\n\treturn new Date(date).toLocaleDateString('en-US', {\r\n\t\tmonth: 'long',\r\n\t});\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n\tconst formattedDate = new Date(date).toLocaleDateString('en-US', {\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'long',\r\n\t\tyear: 'numeric',\r\n\t});\r\n\r\n\treturn formattedDate !== 'Invalid Date'\r\n\t\t? formattedDate + ' year'\r\n\t\t: formattedDate;\r\n};\r\n","import React from 'react';\r\nimport EmployeesItem from '../EmployeesItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { StyledEmployeesList, EmployeesColumn, Letter } from './style';\r\nimport { formatMonth } from 'services/date';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst EmployeesList = () => {\r\n\tconst employees = useSelector(({ employees }) => employees);\r\n\r\n\treturn (\r\n\t\t<StyledEmployeesList>\r\n\t\t\t{Object.keys(employees).map((letter) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<EmployeesColumn key={uuidv4()}>\r\n\t\t\t\t\t\t<Letter>{letter}</Letter>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{employees[letter].length > 0\r\n\t\t\t\t\t\t\t\t? employees[letter].map((employee) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<EmployeesItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={employee.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\temployee={employee}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmonth={formatMonth(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee.dob\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t\t: '-----'}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</EmployeesColumn>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</StyledEmployeesList>\r\n\t);\r\n};\r\n\r\nexport default EmployeesList;\r\n","import React from 'react';\r\nimport { Heading, Main } from './style';\r\nimport EmployeesList from '../EmployeesList';\r\n\r\nconst Employees = () => {\r\n\treturn (\r\n\t\t<Main>\r\n\t\t\t<Heading>Employees</Heading>\r\n\r\n            <EmployeesList />\r\n\t\t</Main>\r\n\t);\r\n};\r\n\r\nexport default Employees;\r\n","import styled from 'styled-components';\r\n\r\nexport const BirthdaysAside = styled.aside`\r\n    width: 30%;\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n    font-size: 2rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const BirthdaysInner = styled.div`\r\n    position: sticky;\r\n    top: 0;\r\n    padding-top: 2rem;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Month = styled.h4`\r\n\tfont-size: 1.4rem;\r\n\tmargin-bottom: 0.8rem;\r\n\tfont-weight: 800;\r\n\tcolor: ${({ theme }) => theme.colors.accentColor};\r\n`;\r\n\r\nexport const BirthdaysItems = styled.ul`\r\n\tlist-style-type: disc;\r\n\tmargin-left: 1rem;\r\n\tmargin-bottom: 1.5rem;\r\n`;\r\n\r\nexport const StyledBirthdaysList = styled.ul`\r\n\tpadding: 2rem;\r\n\tborder-top: 2px solid #000;\r\n`;\r\n\r\nexport const NoEmployees = styled.span`\r\n\tfont-weight: 600;\r\n\tfont-size: 1.5rem;\r\n\ttext-decoration: underline;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n    margin-bottom: 0.4rem;\r\n    font-size: 1.1rem;\r\n`;\r\n","import { Item } from './style';\r\nimport { formatDate } from 'services/date';\r\nimport { memo } from 'react';\r\nimport { shape, string } from 'prop-types';\r\n\r\nconst BirthdaysItem = ({ employee }) => {\r\n\tconst { lastName, firstName, dob } = employee;\r\n\r\n\treturn <Item>{`${lastName} ${firstName} - ${formatDate(dob)}`}</Item>;\r\n};\r\n\r\nBirthdaysItem.propTypes = {\r\n\temployee: shape({\r\n\t\tid: string,\r\n\t\tlastName: string,\r\n\t\tfirstName: string,\r\n\t\tdob: string,\r\n\t}),\r\n};\r\n\r\nexport default memo(BirthdaysItem);\r\n","import {\r\n\tMonth,\r\n\tBirthdaysItems,\r\n\tStyledBirthdaysList,\r\n\tNoEmployees,\r\n} from './style';\r\nimport { useSelector } from 'react-redux';\r\nimport BirthdaysItem from '../BirthdaysItem';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst BirthdaysList = () => {\r\n\tconst selectedEmployees = useSelector((state) => state.selected);\r\n\r\n\tconst birthdayMonths = Object.keys(selectedEmployees);\r\n\r\n\treturn (\r\n\t\t<StyledBirthdaysList>\r\n\t\t\t{birthdayMonths.length > 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{birthdayMonths.map((month) => (\r\n\t\t\t\t\t\t<li key={uuidv4()}>\r\n\t\t\t\t\t\t\t<Month>{month}</Month>\r\n\r\n\t\t\t\t\t\t\t<BirthdaysItems>\r\n\t\t\t\t\t\t\t\t{selectedEmployees[month].map((employee) => (\r\n\t\t\t\t\t\t\t\t\t<BirthdaysItem\r\n\t\t\t\t\t\t\t\t\t\tkey={employee.id}\r\n\t\t\t\t\t\t\t\t\t\temployee={employee}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</BirthdaysItems>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<NoEmployees>No selected employees</NoEmployees>\r\n\t\t\t)}\r\n\t\t</StyledBirthdaysList>\r\n\t);\r\n};\r\n\r\nexport default BirthdaysList;\r\n","import {\r\n\tBirthdaysAside,\r\n    Heading,\r\n    BirthdaysInner\r\n} from './style';\r\nimport BirthdaysList from '../BirthdaysList';\r\n\r\nconst Birthdays = () => {\r\n\treturn (\r\n\t\t<BirthdaysAside>\r\n            <BirthdaysInner>\r\n                <Heading>Employees Birthday</Heading>\r\n\r\n                <BirthdaysList />\r\n            </BirthdaysInner>\r\n\t\t</BirthdaysAside>\r\n\t);\r\n};\r\n\r\nexport default Birthdays;\r\n","import { SET_EMPLOYEES } from 'constants/ActionTypes';\r\n\r\nconst setEmployees = (employees) => {\r\n    return {\r\n\t\ttype: SET_EMPLOYEES,\r\n\t\temployees,\r\n\t};\r\n}\r\n\r\nexport default setEmployees;","const alphabetSort = (employees) => {\r\n\tconst alphabetObject = [...Array(26)].reduce(\r\n\t\t(obj, _, i) => ({ ...obj, [String.fromCharCode(i + 65)]: [] }),\r\n\t\t{}\r\n\t);\r\n\r\n\temployees.forEach((employee) =>\r\n\t\talphabetObject[employee.lastName[0]].push(employee)\r\n\t);\r\n\r\n\treturn alphabetObject;\r\n};\r\n\r\nexport default alphabetSort;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst preloaderAnimation = keyframes`\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nexport const Preloader = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\r\n\t&::after {\r\n\t\tcontent: '';\r\n\t\tdisplay: block;\r\n\t\twidth: 150px;\r\n\t\theight: 150px;\r\n\t\tborder-radius: 50%;\r\n\t\tborder: 6px solid ${({ theme }) => theme.colors.accentColor};\r\n\t\tborder-color: #000 transparent #000 transparent;\r\n\t\tborder-color: ${({ theme }) =>\r\n\t\t\t`${theme.colors.accentColor} transparent ${theme.colors.accentColor} transparent`};\r\n\t\tanimation: ${preloaderAnimation} 2s linear infinite;\r\n\t}\r\n`;\r\n\r\nexport const ErrHeading = styled.h1`\r\n    margin: 4rem auto;\r\n    text-decoration: underline;\r\n`;","import axios from 'axios';\r\n\r\nconst API_URL =\r\n\t'https://yalantis-react-school-api.yalantis.com/api/task0/users';\r\n\r\nconst getEmployees = async (source) => {\r\n\ttry {\r\n\t\tconst response = await axios.get(API_URL, {\r\n\t\t\tcancelToken: source.token,\r\n\t\t});\r\n\r\n\t\treturn response;\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\tthrow new Error(err);\r\n\t}\r\n};\r\n\r\nexport default getEmployees;\r\n","import { useEffect, useState } from 'react';\nimport Employees from 'components/Employees';\nimport Birthdays from 'components/Birthdays';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport setEmployees from 'actions/setEmployees';\nimport alphabetSort from 'services/alphabetSort';\nimport { Preloader, ErrHeading } from './style';\nimport getEmployees from 'services/getEmployees';\n\nfunction App() {\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [error, setError] = useState('');\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tconst source = axios.CancelToken.source();\n\n\t\tgetEmployees(source)\n\t\t\t.then(({ data }) => {\n                const sortedEmployees = alphabetSort(data);\n                \n\t\t\t\tdispatch(setEmployees(sortedEmployees));\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\n\t\treturn () => source.cancel();\n    }, [dispatch]);\n    \n    if (error.length > 0) {\n        return <ErrHeading>{error}</ErrHeading>\n    }\n\n    if (isLoading) {\n        return <Preloader />\n    }\n\n\treturn (\n        <>\n            <Employees />\n            <Birthdays />\n        </>\n\t);\n}\n\nexport default App;\n","import { SET_EMPLOYEES } from 'constants/ActionTypes';\r\n\r\nconst setEmployeesReducer = (state = [], { type, employees }) => {\r\n    switch (type) {\r\n\t\tcase SET_EMPLOYEES:\r\n\t\t\treturn employees;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default setEmployeesReducer;","import { CHECK_EMPLOYEE, UNCHECK_EMPLOYEE } from 'constants/ActionTypes';\r\n\r\nconst selectEmployeeReducer = (state = {}, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase CHECK_EMPLOYEE: {\r\n\t\t\tconst { month, employee } = payload;\r\n\t\t\tconst stateMonth = state[month];\r\n\r\n\t\t\treturn stateMonth !== undefined\r\n\t\t\t\t? { ...state, [month]: [...stateMonth, employee] }\r\n\t\t\t\t: { ...state, [month]: [employee] };\r\n\t\t}\r\n\t\tcase UNCHECK_EMPLOYEE: {\r\n\t\t\tconst { month, employee } = payload;\r\n\t\t\tconst filtered = state[month].filter(\r\n\t\t\t\t({ id }) => id !== employee.id\r\n\t\t\t);\r\n\r\n\t\t\tif (filtered.length > 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\t[month]: filtered,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tconst { [month]: value, ...withoutEmptyMonth } = state;\r\n\r\n\t\t\t\treturn withoutEmptyMonth;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default selectEmployeeReducer;\r\n","import { combineReducers } from 'redux';\r\nimport setEmployeesReducer from './setEmployeesReducer';\r\nimport selectEmployeeReducer from './selectEmployeeReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    employees: setEmployeesReducer,\r\n    selected: selectEmployeeReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport { saveToLocalStorage, loadFromLocalStorage } from './services/storage';\r\n\r\nconst store = createStore(rootReducer, {\r\n\tselected: loadFromLocalStorage('selected'),\r\n});\r\n\r\nstore.subscribe(() => \r\n    saveToLocalStorage('selected', store.getState().selected)\r\n);\r\n\r\nexport default store;\r\n","export const saveToLocalStorage = (key, state) => {\r\n\tconst persistedState = JSON.stringify(state);\r\n\tlocalStorage.setItem(key, persistedState);\r\n};\r\n\r\nexport const loadFromLocalStorage = (key) => {\r\n\tconst persistedState = localStorage.getItem(key);\r\n\r\n\treturn persistedState === null ? {} : JSON.parse(persistedState);\r\n};\r\n","const theme = {\r\n    colors: {\r\n        accentColor: '#177fff',\r\n        textColor: '#000',\r\n        mainBg: '#eaeaea'\r\n    },\r\n    font: \"'Roboto', sans-serif\",\r\n}\r\n\r\nexport default theme;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n        font-family: ${({ theme }) => theme.font};\r\n        letter-spacing: 1px;\r\n        color: ${({ theme }) => theme.colors.textColor};\r\n    }\r\n\r\n    *,\r\n    *::after,\r\n    *::before {\r\n        box-sizing: inherit;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    h1, h2 {\r\n        margin-bottom: 3rem;\r\n    }\r\n\r\n    ul {\r\n        list-style-type: none;\r\n    }\r\n\r\n    li {\r\n        font-weight: 600;\r\n    }\r\n\r\n    #root {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport theme from 'styles/theme';\nimport GlobalStyle from 'styles/globalStyle';\nimport 'normalize.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<App />\n\t\t\t</ThemeProvider>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}